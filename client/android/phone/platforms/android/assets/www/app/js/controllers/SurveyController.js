/**
 *
 * @author Schubert Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Schubert System </br>
 * Schubert system Copyright - NewPortBay LLC copy_right_range</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/

app.controller('SurveyCtrl', [ '$scope', '$rootScope', '$location', '$window', '$q', '$http','surveyFactory','$cordovaSQLite','$timeout','$state','surveyService','$ionicPopup','Settings','$ionicLoading','RestURL',function( $scope, $rootScope, $location, $window, $q, $http,surveyFactory,$cordovaSQLite,$timeout,$state,surveyService,$ionicPopup,Settings,$ionicLoading,RestURL) {

		var self = $scope;

		self.show = function() {
			$ionicLoading.show({
			  template: 'Loading...'
			});
		};
		  self.hide = function(){
			$ionicLoading.hide();
		  };
	  
		$scope.surveyId = ''; 
		self.surveyFactory =[];
		self.surveyResult =[];
		$scope.surveyId = '';

		$scope.cameraUrl= '';
		//$scope.question = [{The_question: 'Loading..'}]
		$scope.imageURL = '';
			$scope.questionare ={
			answer:"",
			radioanswer:""
			};
			
			$scope.takePicture = function(){   

			    navigator.camera.getPicture(cameraSuccess, cameraError, { 
			        quality: 50,
			        destinationType: Camera.DestinationType.FILE_URL
			    });
			    
			};
			   
		   function cameraSuccess(fileURI){
		       console.log(fileURI);
		      var image = document.getElementById('myImage');
		      image.src = fileURI;
		      //imageURL = "data:image/jpeg;charset=utf-8;base64," + fileURI;
		      //image.src = imageURL;
		      
			// now this will be the url returned from service
//			$scope.cameraUrl=imageURL;
			  
			  //file upload
			var syncURL = RestURL.baseURL+"Servey_result_Default_Activity/uploadFile";
			//var imageURL = "data:image/jpeg;charset=utf-8;base64," + fileURI;
			
		   var uri = syncURL;
		   //alert(uri);
		   var options = new FileUploadOptions();
			
		   options.fileKey = "uploadfile";
		   options.fileName = fileURI.substr(fileURI.lastIndexOf('/')+1);
		   options.mimeType = "image/jpeg";
		   options.chunkedMode = false;

		   var ft = new FileTransfer();
		   ft.upload(fileURI, encodeURI(uri), onSuccess, onError, options);
		   function onSuccess(r) {		   
		      //alert("Code = " + r.responseCode);
		      console.log("Response = " + angular.toJson(r.response));
			  
			  var res = r.response.split("\":");			  
			  res = res[1].split("\"}");
			  res = res[0].split("\\")
			  res = res[0]+"\"";
			  console.log("Response now   = " + res);
			  
		      $scope.cameraUrl=res;
			  console.log("camera url="+res);
			  image.src = $scope.cameraUrl;
		      //alert("Sent = " + r.bytesSent);
		   }
		   function onError(error) {
		      //alert("An error has occurred: Code = " + error.code);
		      alert("An error has occurred: Code = " + angular.toJson(error));			  
			  $scope.cameraUrl=imageURL;
		      console.log("upload error source " + error.source);
		      console.log("upload error target " + error.target);
		   }
       }

	   function cameraError(message){
		 // load some default image here
		alert('Failed because: ' + message);
	   };

		function clearCache() {
		    navigator.camera.cleanup();
		}
		 
		function onFail(message) {
		    alert('Failed because: ' + message);
		}

		
		$scope.plain = false;
		$scope.isoption = false;
		$scope.yes_no = false;
		$scope.imageoption = false;
		$scope.camera = false;
		
		
	$scope.getNextQuestion=function(){
		console.log("-------------$scope.options=="+angular.toJson($scope.options));
		//$scope.questionare.answer="";
		if($scope.options!= undefined && $scope.options.length > 0){
			var answer = "";
			var selectedoption = 0;
			var type= $scope.options[0].answer_type;
			if(type=='PLAIN_TEXT'){
				answer = $scope.questionare.answer;					
				$scope.questionare.answer="";
			}else if(type=='OPTION_LABEL'){
				selectedoption = $scope.questionare.radioanswer;
				answer ="";
			}else if(type=='YES_NO_CANCEL'){
				selectedoption = $scope.questionare.radioanswer;
				answer="";
			}else if(type=='IMAGE_OPTIONS'){
				selectedoption = $scope.questionare.radioanswer;
				answer ="";
			}else if($scope.options[0].answer_type=='CAMERA'){
					//$scope.camera = true;
					answer = $scope.cameraUrl;
			}else{
				alert('nothing selected');
			}

			var userid=1;//Settings.global.user.Id;

			//var surveyid = $rootScope.surveyId;		
			$scope.surveyId = $rootScope.surveyId;
			var insert_question_query ="";
			var result = "";
			var id=0;
			
			var selectmaxq = "SELECT  *  from survey_results  where  Id = (select max(Id) FROM survey_results) ";
			result = surveyFactory.execute($rootScope.db,selectmaxq,[]);	
			result.then(
			  function(res) {
				if(res.rows.length > 0) {
					id  = res.rows.item(0).Id;
					}
				insert_question_query="INSERT INTO survey_results VALUES(?,?,?,?,?,?,?,?,?)";							
				result = surveyFactory.execute($rootScope.db,insert_question_query,[id+1,$scope.question.Id,selectedoption,1,1,1,$scope.surveyId,userid,answer]);	
				result.then(
				  function(res) {
				//alert("result"+res);
				$scope.plain = false;
				$scope.isoption = false;
				$scope.yes_no = false;
				$scope.imageoption = false;
				$scope.camera = false;
				//alert(surveyFactory.getNextquestionId());
				$scope.options=[];
				console.log("-------------surveyFactory.getNextquestionId()=="+angular.toJson(surveyFactory.getNextquestionId()));
					surveyService.getNextQuestion($rootScope.surveyId,surveyFactory.getNextquestionId());			
					$scope.question = surveyFactory.getQuestion();			
					$scope.options = surveyFactory.getQuestionOptions();
					if($scope.options.length>0){
						if($scope.options[0].answer_type=='PLAIN_TEXT'){
							$scope.plain = true;	
						}else if($scope.options[0].answer_type=='OPTION_LABEL'){
							$scope.isoption = true;
						}else if($scope.options[0].answer_type=='YES_NO_CANCEL'){
							$scope.yes_no = true;
						}else if($scope.options[0].answer_type=='IMAGE_OPTIONS'){
							$scope.imageoption = true;
						}else if($scope.options[0].answer_type=='CAMERA'){
							$scope.camera = true;							
						}else{
						$scope.plain = false;
						$scope.isoption = false;
						$scope.yes_no = false;
						$scope.imageoption = false;
						$scope.camera = false;
						}
					}
			         
					if(surveyFactory.getisEnd()==true){					
						$scope.isEnd = true;						
						$scope.showAlert('Thank You for Attending the survey!');						
						$timeout(function(){
							$state.transitionTo("begin-survey", {}, {
								reload: true,
								inherit: false,
								notify: true
							});
						},200);
					}else{
						$scope.isEnd = false;
					}
				console.log("Values added in survey results table "+result);
				});		
			  });
		}else{	
				$scope.plain = false;
				$scope.isoption = false;
				$scope.yes_no = false;
				$scope.imageoption = false;
				$scope.options=[];
				//alert(surveyFactory.getNextquestionId());
				surveyService.getNextQuestion($rootScope.surveyId,surveyFactory.getNextquestionId());			
				$scope.question = surveyFactory.getQuestion();			
				$scope.options = surveyFactory.getQuestionOptions();
				if($scope.options.length>0){
					if($scope.options[0].answer_type=='PLAIN_TEXT'){
						$scope.plain = true;	
					}else if($scope.options[0].answer_type=='OPTION_LABEL'){
						$scope.isoption = true;
					}else if($scope.options[0].answer_type=='YES_NO_CANCEL'){
						$scope.yes_no = true;
					}else if($scope.options[0].answer_type=='IMAGE_OPTIONS'){
						$scope.imageoption = true;
					}else if($scope.options[0].answer_type=='CAMERA'){
					$scope.camera = true;
					}else{
					$scope.plain = false;
					$scope.isoption = false;
					$scope.yes_no = false;
					$scope.imageoption = false;
					$scope.camera = false;
					}
				}
				if(surveyFactory.getisEnd()==true){
					$scope.isEnd = true;
					
					$scope.showAlert('Thank You for Attending the survey!');
					$timeout(function(){				
						surveyFactory.setNextquestionId(0);
					$state.transitionTo("store-details", {}, {
						reload: true,
						inherit: false,
						notify: true
					});
					},200);
				
				}else{
					$scope.isEnd = false;
				}
				console.log("nextquestion..........."+ $scope.options);		
			}
		
		}
		
		$scope.showAlert = function (msg) {
            var alertPopup = $ionicPopup.alert({
                title: 'Result: ',
                template: msg
            });
            alertPopup.then(function (res) {
                console.log('Thanks');
            });
        };
		
	function firstQuestionWithOptions(){
	self.show();
		return $q(function(resolve, reject) {		
			$scope.plain = false;
			$scope.isoption = false;
			$scope.yes_no = false;
			$scope.imageoption = false;
			var quest_id = surveyFactory.getNextquestionId();
			console.log("survey Id-----------------------------------"+$scope.surveyId);
				var promise = surveyService.getNextQuestion($rootScope.surveyId,surveyFactory.getNextquestionId());	
				promise.then(function() {				
				$timeout(function(){   
					//alert("inside firstQuestionWithOptions "+$scope.question+"option  "+$scope.options);				
					$scope.question = surveyFactory.getQuestion();	
					console.log("questions ------"+angular.toJson($scope.question));
					$scope.options = surveyFactory.getQuestionOptions();
					console.log("options ------"+angular.toJson($scope.options));
				  resolve($scope.options);
				  },500);
				
				});
			});
		}
		 
        
		$scope.init=function(){
			console.log("-----init fun");
			//alert("callin g init")
			if(surveyFactory.getisEnd()==true){
				//$window.location.reload(true);
				surveyFactory.setisEnd(false);
				surveyFactory.setNextquestionId(0);
				surveyFactory.setQuestion('{}');
			}
			firstQuestionWithOptions().then(function(res) {		
					console.log("---oprtino in promise--"+angular.toJson(res));
					//alert('here'+angular.toJson(res.length));
					if($scope.options.length>0){
					if($scope.options[0].answer_type=='PLAIN_TEXT'){
						$scope.plain = true;	
					}else if($scope.options[0].answer_type=='OPTION_LABEL'){
						$scope.isoption = true;
					}else if($scope.options[0].answer_type=='YES_NO_CANCEL'){
						$scope.yes_no = true;
					}else if($scope.options[0].answer_type=='IMAGE_OPTIONS'){
						$scope.imageoption = true;
					}else if($scope.options[0].answer_type=='CAMERA'){
					$scope.camera = true;
					}else{
					$scope.plain = false;
					$scope.isoption = false;
					$scope.yes_no = false;
					$scope.imageoption = false;
					$scope.camera = false;
					}
					surveyService.getNextQuestion($rootScope.surveyId,surveyFactory.getNextquestionId());
					self.hide();
					
				}else{
					reject();
				}
					//alert('Success promice: '+surveyFactory.getNextquestionId()+"options inside init"+angular.toJson(surveyFactory.getQuestionOptions()));
			}, function(reason) {
				alert('Failed: ' + reason);
			});
//				$scope.getNextQuestion();	
//$timeout(function(){   
		/*	surveyService.getSurvey().then(function(res){
				self.surveyResult = res;
				console.log("---A-"+angular.toJson(self.surveyResult));
			});*/
//			$timeout(function(){  console.log('----time  consumed'); },1500);
			//console.log("---A-"+angular.toJson(self.surveyResult));
//		},900);	
	}
		$scope.init();
}]);